services:
  postgres:
    image: postgres:13
    platform: linux/amd64
    container_name: marquez-postgres-column
    environment:
      - POSTGRES_DB=marquez
      - POSTGRES_USER=marquez
      - POSTGRES_PASSWORD=marquez
    volumes:
      - postgres_data_column:/var/lib/postgresql/data
    networks:
      - marquez
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marquez -d marquez"]
      interval: 10s
      timeout: 5s
      retries: 5

  marquez-api:
    image: marquezproject/marquez:0.45.0
    platform: linux/amd64
    container_name: marquez-api-column
    ports:
      - "3004:8080"
    environment:
      - MARQUEZ_DB_HOST=postgres
      - MARQUEZ_DB_PORT=5432
      - MARQUEZ_DB_NAME=marquez
      - MARQUEZ_DB_USER=marquez
      - MARQUEZ_DB_PASSWORD=marquez
      - MARQUEZ_MIGRATE_ON_STARTUP=true
      - MARQUEZ_PORT=8080
      - MARQUEZ_HOST=0.0.0.0
      - MARQUEZ_CORS_ALLOWED_ORIGINS=*
      - MARQUEZ_CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - MARQUEZ_CORS_ALLOWED_HEADERS=Content-Type,Authorization
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - marquez

  marquez-web:
    image: marquezproject/marquez-web:0.45.0
    platform: linux/amd64
    container_name: marquez-web-column
    ports:
      - "3001:3000"
    environment:
      - MARQUEZ_API_URL=http://marquez-api:8080
      - REACT_APP_MARQUEZ_API_URL=http://localhost:8080
      - MARQUEZ_HOST=marquez-api
      - MARQUEZ_PORT=8080
      - WEB_PORT=3000
    depends_on:
      - marquez-api
    networks:
      - marquez

volumes:
  postgres_data_column:

networks:
  marquez:
    driver: bridge
